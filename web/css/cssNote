1、css四种选择器优先级排序：内联样式（例：<h1 style="">）  >   id选择器（例：#Id{})   >  class选择器（例：.tableClass{}） > 标签选择器(例：h1{})  
2、样式表插入三种方式：1、外部样式表(External style sheet)  引用方式：  <head> 
                                                                        <link rel="stylesheet" type="text/css" href="mystyle.css"> 
                                                                    </head>
                     2、内部样式表(Internal style sheet)  引用方式： <head>
                                                                        <style>
                                                                            hr {color:sienna;}
                                                                            p {margin-left:20px;}
                                                                            body {background-image:url("images/back40.gif");}
                                                                        </style>
                                                                    </head>   
                     3、内联样式(Inline style)            引用方式：<p style="color:sienna;margin-left:20px">这是一个段落。</p>
3、多重样式，不同引用方式，会根据优先级覆盖共有得样式，不同得则会继承：
        其中优先级： 内联样式）Inline style > （内部样式）Internal style sheet >（外部样式）External style sheet > 浏览器默认样式
优先级顺序
下列是一份优先级逐级增加的选择器列表：
            通用选择器（*）
            元素(类型)选择器
            类选择器
            属性选择器
            伪类
            ID 选择器
            内联样式
            !important 规则例外
            当 !important 规则被应用在一个样式声明中时,该样式声明会覆盖CSS中任何其他的声明, 无论它处在声明列表中的哪里. 尽管如此,
            !important规则还是与优先级毫无关系.使用 !important 不是一个好习惯，因为它改变了你样式表本来的级联规则，从而使其难以调试。
            一些经验法则：
            Always 要优化考虑使用样式规则的优先级来解决问题而不是 !important
            Only 只在需要覆盖全站或外部 css（例如引用的 ExtJs 或者 YUI ）的特定页面中使用 !important
            Never 永远不要在全站范围的 css 上使用 !important
            Never 永远不要在你的插件中使用 !important
