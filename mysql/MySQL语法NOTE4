1、获取服务器元数据
      以下命令语句可以在 MySQL 的命令提示符使用，也可以在脚本中 使用，如PHP脚本。
      SELECT VERSION( )	服务器版本信息
      SELECT DATABASE( )	当前数据库名 (或者返回空)
      SELECT USER( )	当前用户名
      SHOW STATUS	服务器状态
      SHOW VARIABLES	服务器配置变量
 2、防止表中出现重复数据
      在MySQL数据表中设置指定的字段为 PRIMARY KEY（主键） 或者 UNIQUE（唯一） 索引来保证数据的唯一性。
      INSERT IGNORE INTO与INSERT INTO的区别：
              就是INSERT IGNORE会忽略数据库中已经存在的数据，如果数据库没有数据，就插入新的数据，如果有数据的话就跳过这条数据。
              这样就可以保留数据库中已经存在数据，达到在间隙中插入数据的目的。
              以下实例使用了INSERT IGNORE INTO，执行后不会出错，也不会向数据表中插入重复数据：
      NSERT IGNORE INTO当插入数据时，在设置了记录的唯一性后，如果插入重复数据，将不返回错误，只以警告形式返回。 
      而REPLACE INTO into如果存在primary 或 unique相同的记录，则先删除掉。再插入新记录。
 3、防止SQL注入，我们需要注意以下几个要点：
      1.永远不要信任用户的输入。对用户的输入进行校验，可以通过正则表达式，或限制长度；对单引号和 双"-"进行转换等。
      2.永远不要使用动态拼装sql，可以使用参数化的sql或者直接使用存储过程进行数据查询存取。
      3.永远不要使用管理员权限的数据库连接，为每个应用使用单独的权限有限的数据库连接。
      4.不要把机密信息直接存放，加密或者hash掉密码和敏感的信息。
      5.应用的异常信息应该给出尽可能少的提示，最好使用自定义的错误信息对原始错误信息进行包装
      6.sql注入的检测方法一般采取辅助软件或网站平台来检测，软件一般采用sql注入检测工具jsky，网站平台就有亿思网站安全平台检测工具。
        MDCSOFT SCAN等。采用MDCSOFT-IPS可以有效的防御SQL注入，XSS攻击等。
4、导入导出数据时：出现
      mysql> select * from person_tbl
          -> into outfile 'd:/person.txt';
      ERROR 1290 (HY000): The MySQL server is running with the --secure-file-priv option so it cannot execute this statement
      mysql> show avriables like '%secure%';
      ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'avriables like '%secure%'' at line 1
      mysql> show VAriables like '%secure%';
      +--------------------------+-------+
      | Variable_name            | Value |
      +--------------------------+-------+
      | require_secure_transport | OFF   |
      | secure_auth              | ON    |
      | secure_file_priv         | NULL  |
      +--------------------------+-------+
      secure_file_priv 该值为设置导入导出，为NULl 则表示禁止导入导出数据，需要在my.ini下设置：  
          #设置导入导出
          secure_file_priv = "E:/mysql oracle client/mysql/sql_file"
